import React, {Component} from 'react';
import {
  Text,
  View,
  Image,
  TouchableOpacity,
  StyleSheet,
  Dimensions,
  Platform,
} from 'react-native';

// import ImageView from '../src/ImageView';
import ImageView from 'react-native-image-view';

const {width} = Dimensions.get('window');

const cities = [
  {
    source: {
      uri:
        'https://avatars.mds.yandex.net/get-pdb/49816/d9152cc6-bf48-4e44-b2d5-de73b2e94454/s800',
    },
    title: 'London',
  },
  {
    source: {
      uri:
        'https://cdn.pixabay.com/photo/2017/08/17/10/47/paris-2650808_960_720.jpg',
    },
    title: 'Paris',
    width: 806,
    height: 720,
  },
  {
    source: {
      uri:
        'https://images.fineartamerica.com/images/artworkimages/mediumlarge/1/1-forest-in-fog-russian-nature-forest-mist-dmitry-ilyshev.jpg',
    },
    title: 'Switzerland',
  },
];

const styles = StyleSheet.create({
  container: {
    flex: 1,
    flexDirection: 'column',
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#000',
    paddingTop: Platform.select({ios: 0, android: 10}),
  },
  tabs: {
    flexDirection: 'row',
  },
  tab: {
    flex: 1,
    height: 30,
    alignItems: 'center',
    justifyContent: 'flex-end',
  },
  tabTitle: {
    color: '#EEE',
  },
  tabTitleActive: {
    fontWeight: '700',
    color: '#FFF',
  },
  footer: {
    width,
    height: 50,
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: 'rgba(0, 0, 0, 0.4)',
    paddingHorizontal: 10,
    paddingVertical: 5,
  },
  footerButton: {
    flexDirection: 'row',
    marginLeft: 15,
  },
  footerText: {
    fontSize: 16,
    color: '#FFF',
    textAlign: 'center',
  },
});

export default class App extends Component {
  constructor(props) {
    super(props);

    this.state = {
      imageIndex: 0,
      isImageViewVisible: false,
    };
  }

  render() {
    const {isImageViewVisible, imageIndex} = this.state;
    const images = cities;

    return (
      <View style={styles.container}>
        <View>
          {images.map((image, index) => (
            <TouchableOpacity
              key={image.title}
              onPress={() => {
                this.setState({
                  imageIndex: index,
                  isImageViewVisible: true,
                });
              }}>
              <Image
                style={{width, height: 200}}
                source={image.source}
                resizeMode="cover"
              />
            </TouchableOpacity>
          ))}
        </View>

        <ImageView
          glideAlways
          images={images}
          imageIndex={imageIndex}
          animationType="fade"
          isVisible={isImageViewVisible}
          onClose={() => this.setState({isImageViewVisible: false})}
          onImageChange={index => {
            console.log(index);
          }}
        />
      </View>
    );
  }
}
